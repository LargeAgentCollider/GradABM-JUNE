{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the GradABM-JUNE documentation For a full description of the June model, please see the main paper .","title":"Home"},{"location":"#welcome-to-the-gradabm-june-documentation","text":"For a full description of the June model, please see the main paper .","title":"Welcome to the GradABM-JUNE documentation"},{"location":"quickstart/","text":"Quickstart 1. Creating a population graph The first step is to create a population graph. In general, we want a realistic population graph generated by JUNE [TODO: tutorial on how to create a world with June]. A small example containing a portion of London can be found in worlds/data_london.pkl . 2. Running the model An example of a configuration file can be found in configs/default.yaml . The file should be self-explanatory. We can then run TorchJune by simply python example_scripts/run_model.py configs/default.yaml 3. Reading the results In the default configuration file, the results are saved in example/results.csv . This is a csv file containing aggregated data such as number of cases and deaths per date.","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"","title":"Quickstart"},{"location":"quickstart/#1-creating-a-population-graph","text":"The first step is to create a population graph. In general, we want a realistic population graph generated by JUNE [TODO: tutorial on how to create a world with June]. A small example containing a portion of London can be found in worlds/data_london.pkl .","title":"1. Creating a population graph"},{"location":"quickstart/#2-running-the-model","text":"An example of a configuration file can be found in configs/default.yaml . The file should be self-explanatory. We can then run TorchJune by simply python example_scripts/run_model.py configs/default.yaml","title":"2. Running the model"},{"location":"quickstart/#3-reading-the-results","text":"In the default configuration file, the results are saved in example/results.csv . This is a csv file containing aggregated data such as number of cases and deaths per date.","title":"3. Reading the results"},{"location":"synthetic_population/","text":"Synthetic population GradABM-JUNE uses the synthetic population from the JUNE model. To convert a JUNE synthetic \"world\" to a PyTorch geometric graph that GradABM-JUNE can recognize, we can use the scrips/make_data.py script. 1. Create digital population with JUNE. The first step is to create the digital twin with the JUNE code. We first need to install JUNE (https://github.com/idas-durham/june). Then we can create our own world by using the create_world.py script: https://github.com/IDAS-Durham/JUNE/blob/master/example_scripts/create_world.py . After running the script, the world should have been save in an HDF5 file. 2. Convert the JUNE world into a GradABM-JUNE graph. By using https://github.com/arnauqb/GradABM-JUNE/blob/main/example_scripts/make_data.py we can do python make_data.py /path/to/world.hdf5 This will save a pickle file with the PyTorch graph, that can then be loaded by GradABM-JUNE.","title":"Synthetic population"},{"location":"synthetic_population/#synthetic-population","text":"GradABM-JUNE uses the synthetic population from the JUNE model. To convert a JUNE synthetic \"world\" to a PyTorch geometric graph that GradABM-JUNE can recognize, we can use the scrips/make_data.py script.","title":"Synthetic population"},{"location":"synthetic_population/#1-create-digital-population-with-june","text":"The first step is to create the digital twin with the JUNE code. We first need to install JUNE (https://github.com/idas-durham/june). Then we can create our own world by using the create_world.py script: https://github.com/IDAS-Durham/JUNE/blob/master/example_scripts/create_world.py . After running the script, the world should have been save in an HDF5 file.","title":"1. Create digital population with JUNE."},{"location":"synthetic_population/#2-convert-the-june-world-into-a-gradabm-june-graph","text":"By using https://github.com/arnauqb/GradABM-JUNE/blob/main/example_scripts/make_data.py we can do python make_data.py /path/to/world.hdf5 This will save a pickle file with the PyTorch graph, that can then be loaded by GradABM-JUNE.","title":"2. Convert the JUNE world into a GradABM-JUNE graph."}]}
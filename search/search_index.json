{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the TorchJune documentation For a full description of the June model, please see the main paper .","title":"Home"},{"location":"#welcome-to-the-torchjune-documentation","text":"For a full description of the June model, please see the main paper .","title":"Welcome to the TorchJune documentation"},{"location":"quickstart/","text":"Quickstart 1. Creating a population graph The first step is to create a population graph. In general, we want a realistic population graph generated by JUNE [TODO: tutorial on how to create a world with June]. A small example containing a portion of London can be found in worlds/data_london.pkl . 2. Running the model An example of a configuration file can be found in configs/default.yaml . The file should be self-explanatory. We can then run TorchJune by simply python example_scripts/run_model.py configs/default.yaml 3. Reading the results In the default configuration file, the results are saved in example/results.csv . This is a csv file containing aggregated data such as number of cases and deaths per date.","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"","title":"Quickstart"},{"location":"quickstart/#1-creating-a-population-graph","text":"The first step is to create a population graph. In general, we want a realistic population graph generated by JUNE [TODO: tutorial on how to create a world with June]. A small example containing a portion of London can be found in worlds/data_london.pkl .","title":"1. Creating a population graph"},{"location":"quickstart/#2-running-the-model","text":"An example of a configuration file can be found in configs/default.yaml . The file should be self-explanatory. We can then run TorchJune by simply python example_scripts/run_model.py configs/default.yaml","title":"2. Running the model"},{"location":"quickstart/#3-reading-the-results","text":"In the default configuration file, the results are saved in example/results.csv . This is a csv file containing aggregated data such as number of cases and deaths per date.","title":"3. Reading the results"}]}